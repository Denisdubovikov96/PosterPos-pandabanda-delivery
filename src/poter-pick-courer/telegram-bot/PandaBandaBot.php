<?php
// –±–∏–∑–Ω–µ—Å –ª–æ–≥–∏–∫–∞ —Ç–µ–ª–µ–≥—Ä–∞–º –±–æ—Ç–∞
// - –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Ç–∏–ø–∞ ID –º–µ–Ω–µ–¥–∂–µ—Ä–æ–≤ –¥–ª—è —Ä–∞–∑–Ω—ã—Ö —Ç–∏–ø–æ–≤ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π, –ì—Ä—É–ø–ø –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –∏ –ø—Ä
// - –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –∑–∞–ø—Ä–æ—Å —Å –≤–Ω–µ—à–Ω–µ–≥–æ –∏—Å—Ç–æ—á–Ω–∏–∫–∞ —Ç–∏–ø–∞ –ù–û–í–´–ô –ó–ê–ö–ê–ó
// - –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–µ –∫–Ω–æ–ø–∫–∏ –≤ –∑–∞–∫–∞–∑–µ —Ç–∏–ø–∞ –î–û–°–¢–ê–í–õ–ï–ù–û –û–¢–ú–ï–ù–ï–ù–û –∏ –ø—Ä - –¥—É–±–ª–∏—Ä—É—é—Ç—Å—è
// - –ø–∞—Ä—Å–∏—Ç –ø–æ–ª—É—á–µ–Ω–Ω—ã–π –æ–±—å–µ–∫—Ç
// - –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ (–Ω–∞–ø—Ä–∏–º–µ—Ä –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ–≥–æ –∫—É—Ä—å–µ—Ä–∞ –∏–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ –¥–æ—Å—Ç–∞–≤–ª–µ–Ω–æ)

//1390566444:AAGX4TgzUybxitgOoPl-1ayw2WboCOckuBg


//1. –ú–æ–∂–Ω–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å –±–æ—Ç, –Ω–æ –î–µ–Ω–∏—Å –≤ –ü–æ—Å—Ç–µ—Ä–µ –ö—É—Ä—å–µ—Ä–∞–º —Ä—è–¥–æ–º —Å –∏–º–µ–Ω–µ–º –ø–æ–º–∏–º–æ —Ç–µ–ª–µ–≥—Ä–∞–º–º –ª–æ–≥–∏–Ω–∞(–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ) - –¥–æ–±–∞–≤—å —Ü–∏—Ñ—Ä—ã ID —á–∞—Ç–∞ –≤ —Ç–µ–ª–µ–≥—Ä–∞–º–º–µ (–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ)
//2. –ß—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å ID —á–∞—Ç–∞ –ø–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∑–∞–π–¥–∏ –≤ –Ω–∞—à —á–∞—Ç–±–æ—Ç @delivery_pandaban_bot –∏ –Ω–∞–±–µ—Ä–∏ /ncurses_start_color()
//3. –ö–Ω–æ–ø–∫–∏ –≤ —Å–æ–æ–±—â–µ–Ω–∏–∏ "–î–û–°–¢–ê–í–õ–ï–ù–û" "–û–¢–ú–ï–ù–ï–ù–û" —Å–¥–µ–ª–∞—é –∑–∞–≤—Ç—Ä–∞
//4. –ù–∞ –∫–∞–∂–¥–æ–º —à–∞–≥–µ –≤–µ–¥—É—Ç—Å—è –ª–æ–≥–∏, —Ç–∞–∫ —á—Ç–æ –µ—Å–ª–∏ —á—Ç–æ –ø–æ–π–¥–µ—Ç –Ω–µ —Ç–∞–∫ —Å—Ä–∞–∑—É –æ—Ç–ª–æ–≤–∏–º, –∫–æ–ø–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏–π —è —Ç–æ–∂–µ –ø–æ–ª—É—á–∞—é, –¥–∞–π—Ç–µ ID –∫–æ–º—É –µ—â–µ —Å–ª–∞—Ç—å –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏


class PandaBandaBot
{
    public $params, $telegramRequest;


    public function __construct($params)
    {
        $this->params = $params;
        $this->telegramRequest = @json_decode(file_get_contents("php://input"));
        $this->request_incoming();

    }

    public function request_incoming()
    {


        if (isset($_REQUEST['order'])) {
            $this->logs("poster.txt", print_r($_REQUEST, TRUE));
            $this->parseRequest001createMessage();

        } else if ($this->telegramRequest) {
            $this->logs("telegramIncome.txt", print_r($this->telegramRequest, TRUE));
            if ($this->telegramRequest->message->text === "/start") $this->controllerStartButoon();
        }


    }

    private function controllerStartButoon()
    {
        $message = "–°–æ–æ–±—â–∏—Ç–µ –º–µ–Ω–µ–¥–∂–µ—Ä—É –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –≤ —Å–∏—Å—Ç–µ–º–µ –≤–∞—à —á–∞—Ç —Ç–µ–ª–µ–≥—Ä–∞–º ID : \n"
            . $this->telegramRequest->message->chat->id;
        $this->logs("myRequest.txt", print_r([$this->telegramRequest->message->chat->id, $message], TRUE));
        $this->telegramSend(
            $this->telegramRequest->message->chat->id,
            $message
        );
    }

    private function parseRequest001createMessage()
    {
        // –û–¢–õ–ê–î–ö–ê
        // –û–¢–õ–ê–î–ö–ê
        /*$_REQUEST = [
            'courier' => '{"user_id":10,"name":"–≠–¢–û –¢–ï–°–¢–û–í–´–ï –î–ê–ù–ù–´–ï –ò–ó –ö–û–î–ê –ë–û–¢–ê (440046277)","login":"","role_name":"–ö—É—Ä—å–µ—Ä","role_id":12,"user_type":5,"access_mask":2048,"last_in":"0000-00-00 00:00:00","inn":"","name_for_fiscal":""}',
            'manadger' => '{"user_id":4,"name":"–î–µ–Ω–∏—Å","login":"denisdubovikov96@gmail.com","role_name":"root","role_id":5,"user_type":90,"access_mask":2147483647,"last_in":"2020-08-28 14:01:17","inn":"","name_for_fiscal":"–î—É–±–æ–≤ –î–µ–Ω"}',
            'order' => '{"id":1598615972976,"dateStart":1598615972976,"dateClose":0,"datePrint":0,"status":1,"userId":4,"tableId":0,"orderName":111,"guestsCount":1,"serviceMode":3,"processingStatus":10,"products":{"0":{"id":5,"count":6,"price":70,"printedNum":0},"1":{"id":242,"count":2,"price":0,"printedNum":0},"2":{"id":6,"count":2,"price":159.72,"printedNum":0},"3":{"id":375,"count":2,"price":0.01,"printedNum":0},"4":{"id":378,"count":3,"price":0.01,"printedNum":0},"5":{"id":1,"count":2,"price":93,"printedNum":0}},"deliveryInfo":{"city":"","courierId":10,"address1":"","address2":"","billAmount":0,"paymentMethodId":0,"comment":"","deliveryTime":1598619572976,"deliveryZoneId":0,"deliveryPrice":0,"uuid":""},"clientLoyaltyType":2,"subtotal":925.49,"total":925.49,"discount":0,"clientId":2,"payType":"","payedSum":1000,"payedCard":0,"payedCash":1,"payedCert":0,"payedEwallet":0,"payedThirdParty":0,"payedBonus":0,"approvedBonus":0,"platformDiscount":0,"loyaltyAppId":0,"parentId":0,"tipIncluded":0,"tipSum":0,"roundSum":0,"printFiscal":0,"comment":""}',
            'products' => '[{"id":5,"count":6,"price":70,"printedNum":0,"name":"Croissant with chocolate"},{"id":242,"count":2,"price":0,"printedNum":0,"name":"–ö-—Å—Ç—å –ø—Ä–∏–±–æ—Ä—ñ–≤"},{"id":6,"count":2,"price":159.72,"printedNum":0,"name":"–ö–∞–∫–æ–π —Ç–æ —Ç–æ–≤–∞—Ä 1"},{"id":375,"count":2,"price":0.01,"printedNum":0,"name":"Cola / Fanta / Sprite –¥–æ –±–æ—Ä—Ç–∏–∫—ñ–≤"},{"id":378,"count":3,"price":0.01,"printedNum":0,"name":"–î–æ—Å—Ç–∞–≤–∫–∞ leaf"},{"id":1,"count":2,"price":93,"printedNum":0,"name":"Borjomi 0.5l"}]',
            'client' => '{"id":2,"firstname":"–î–µ–Ω–∏—Å","lastname":"–î—É–±–æ–≤–∏–∫–æ–≤","patronymic":"","loyaltyType":2,"discount":0,"hidden":0,"groupId":1,"cardNumber":"","bonus":0,"ewallet":0,"useEwallet":false,"totalPayedSum":500,"city":"–ñ–∏—Ç–æ–º–∏—Ä","address":"–ú–∏—Ö–∞–π–ª–æ–≤—Å–∫–∞—è, 18","comment":"–∫–∞–∫–æ–π —Ç–æ –∫–æ–º–µ–Ω—Ç–∞—Ä–∏–π –∫–∞—Ä—Ç—ã –∫–ª–∏–µ–Ω—Ç–∞","phone":"+380 93 111 2222","email":"","birthday":"2000-11-11","governmentId":"","clientSex":1}',
        ];*/

        // ID —á–∞—Ç–∞ –∫—É—Ä—å–µ—Ä–∞ –∫–æ–º—É —à–ª–µ–º –º–µ—Å—Å–∞–¥–∂
        preg_match('~([0-9-]{6,15})~', json_decode($_REQUEST['courier'])->name, $match);
        $courierId = $match[1];

        if (!$courierId) {
            // —Å–±–æ–π
            $to = $this->params->adminIDChat;
            $this->telegramSend($to, "–ù–ï –≤–∏–∂—É ID –∫—É—Ä—å–µ—Ä–∞ —Å–º. BadRequest.txt");
            $this->logs("BadRequest.txt", print_r($_REQUEST, TRUE));
            die('{"message":"–ù–ï –≤–∏–∂—É ID –∫—É—Ä—å–µ—Ä–∞"}');
            exit;
            exit;
            exit;
        }

        // —Å–æ—Å—Ç–∞–≤
        // —Å–æ—Å—Ç–∞–≤
        // —Å–æ—Å—Ç–∞–≤
        $listProducts = "–ó–∞–∫–∞–∑ üç£üçï \n";
        foreach (json_decode($_REQUEST['products']) as $item) {
            $listProducts .= "  ‚úì " . $item->name . ($item->price ? " (" . $item->price . " –≥—Ä–Ω)" : "") . " - " . $item->count . "—à—Ç.\n";
        }

        // —Å—É–º–∞ –∏ —Å–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã
        // —Å—É–º–∞ –∏ —Å–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã
        // —Å—É–º–∞ –∏ —Å–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã
        $price = "";
        //—Å–¥–∞—á–∞
        $returnMoney = json_decode($_REQUEST['order'])->deliveryInfo->billAmount - json_decode($_REQUEST['order'])->total;
        $returnMoney = $returnMoney > 0 ? "\nC–¥–∞—á–∞: $returnMoney –≥—Ä–Ω." : "";
        //
        $price .= json_decode($_REQUEST['order'])->total ? "–ö –æ–ø–ª–∞—Ç–µ: " . json_decode($_REQUEST['order'])->total . " –≥—Ä–Ω.\n" : "";
        $price .= (json_decode($_REQUEST['order'])->deliveryInfo->paymentMethodId == 1) ? "–¢–∏–ø –æ–ø–ª–∞—Ç—ã: –Ω–∞–ª–∏—á–Ω—ã–µ üíµ $returnMoney," : "";
        $price .= (json_decode($_REQUEST['order'])->deliveryInfo->paymentMethodId == 2) ? "–¢–∏–ø –æ–ø–ª–∞—Ç—ã: —Ç–µ—Ä–º–∏–Ω–∞–ª üí≥," : "";
        $price .= (json_decode($_REQUEST['order'])->deliveryInfo->paymentMethodId == 10) ? "–û–Ω–ª–∞–π–Ω-–æ–ø–ª–∞—Ç–∞üñ•," : "";

        // –≠–¢–£ –•–†–ï–ù–¨ –û–¢–ö–õ–Æ–ß–ò–¢–¨ ???????
        // –≠–¢–£ –•–†–ï–ù–¨ –û–¢–ö–õ–Æ–ß–ò–¢–¨ ???????
        // –≠–¢–£ –•–†–ï–ù–¨ –û–¢–ö–õ–Æ–ß–ò–¢–¨ ???????
        //$price .= json_decode($_REQUEST['order'])->discount ? " —Å–∫–∏–¥–∫–∞: " . json_decode($_REQUEST['order'])->discount . " –≥—Ä–Ω.," : "";
        //$price .= json_decode($_REQUEST['order'])->payType ? " —Ç–∏–ø —Å–∫–∏–¥–∫–∏: " . json_decode($_REQUEST['order'])->payType . "," : "";
        //$price .= json_decode($_REQUEST['order'])->payedCard ? "–¢–∏–ø –æ–ø–ª–∞—Ç—ã: —Ç–µ—Ä–º–∏–Ω–∞–ª üí≥," : "";
        //$price .= json_decode($_REQUEST['order'])->payedCash ? "–¢–∏–ø –æ–ø–ª–∞—Ç—ã: –Ω–∞–ª–∏—á–Ω—ã–µ üíµ $returnMoney," : "";
        //$price .= json_decode($_REQUEST['order'])->payedEwallet ? "–û–Ω–ª–∞–π–Ω-–æ–ø–ª–∞—Ç–∞üñ•," : "";
        //$price .= json_decode($_REQUEST['order'])->payedThirdParty ? "–¢–∏–ø –æ–ø–ª–∞—Ç—ã: –î–†–£–ì–û–ï," : "";
        //
        $price = trim($price, " ,");


        //–∞–¥—Ä–µ—Å
        //–∞–¥—Ä–µ—Å
        //–∞–¥—Ä–µ—Å
        $address =
            //json_decode($_REQUEST['order'])->deliveryInfo->city
            // –≥–æ—Ä–æ–¥ –Ω–µ —É–∫–∞–∑—ã–≤–∞—é—Ç - –∂–µ—Å—Ç–∫–æ –≤–ø–∏—à–µ–º
            json_decode($_REQUEST['order'])->deliveryInfo->address1;
        //
        $addressComment = json_decode($_REQUEST['order'])->deliveryInfo->address2
            . (json_decode($_REQUEST['order'])->deliveryInfo->comment ? "\n–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ: " . json_decode($_REQUEST['order'])->deliveryInfo->comment : "");

        //—Ç–µ–ª–µ—Ñ–æ–Ω
        $phone = trim(str_replace(" ", "", json_decode($_REQUEST['client'])->phone));

        /** –ü–û–†–ß–Ø–î–û–ö –ù–ï –ú–ï–ù–Ø–¢–¨
         * // –ü–û–†–ß–Ø–î–û–ö –ù–ï –ú–ï–ù–Ø–¢–¨
         * // –ü–û–†–ß–Ø–î–û–ö –ù–ï –ú–ï–ù–Ø–¢–¨
         * // –ü–û–†–ß–Ø–î–û–ö –ù–ï –ú–ï–ù–Ø–¢–¨ **/
        $message = sprintf($this->params->message2courier,
            json_decode($_REQUEST['order'])->orderName,//ID –¥–æ—Å—Ç–∞–≤–∫–∏
            json_decode($_REQUEST['courier'])->name,//–ö—É—Ä—å–µ—Ä –∏–º—è

            date("Y/m/d H:i", (json_decode($_REQUEST['order'])->dateStart / 1000)), //–î–∞—Ç–∞
            date("Y/m/d H:i", (json_decode($_REQUEST['order'])->deliveryInfo->deliveryTime / 1000)), //–î–∞—Ç–∞


            json_decode($_REQUEST['client'])->firstname . " " . json_decode($_REQUEST['client'])->lastname,
            json_decode($_REQUEST['client'])->comment ? "–û –∫–ª–∏–µ–Ω—Ç–µ: " . json_decode($_REQUEST['client'])->comment : "",//–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π
            $phone,// —Ç–µ–ª–µ—Ñ–æ–Ω
            "<a href='https://www.google.com/maps/place/$address, –ñ–∏—Ç–æ–º–∏—Ä, –ñ–∏—Ç–æ–º–∏—Ä—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å'>$address</a>",//–ê–¥—Ä–µ—Å
            $addressComment,

            $listProducts,//—Å–ø–∏—Å–æ–∫ —Ç–æ–≤–∞—Ä–æ–≤
            $price
        );
        // DEBUG –ù–ï –û–°–¢–ê–í–õ–Ø–ô –ù–ê –í–´–í–û–î–ï –∏–º–µ–Ω–æ JSON –Ω–∏–∂–µ –≤ –æ—Ç–ø—Ä–∞–≤–∫–µ –∏–¥–µ—Ç
        //echo "<pre>$message</pre>";


        // –®–ª–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
        // –®–ª–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
        // –®–ª–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
        $to = $this->params->adminIDChat;
        $to[] = $courierId;
        $this->telegramSend($to, $message);
        $this->logs("myRequest.txt", print_r([$to, $message], TRUE));


    }


    function telegramSend($telegramchatid, $msg)
    {
        $url = 'https://api.telegram.org/bot' . $this->params->APIKey . '/sendMessage';
        $list = [];
        if (!is_array($telegramchatid)) $list[] = $telegramchatid;
        else $list = $telegramchatid;

        foreach ($list as $chatId) {
            $data = [
                'chat_id' => $chatId,
                'text' => $msg,
                'parse_mode' => 'html',
//                'parse_mode' => 'markdown',
                'disable_web_page_preview' => 1
            ];
            $options = ['http' => ['method' => 'POST', 'header' => "Content-Type:application/x-www-form-urlencoded\r\n", 'content' => http_build_query($data),],];
            $context = stream_context_create($options);
            $responce = file_get_contents($url, false, $context);
            //
            $this->logs("telegramResponseOnMyRequest.txt", $responce);
        }

        die('{"message":"–£—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ"}');
        exit;
        exit;
        exit;
    }

    private function logs($filelog_name, $message)
    {
        $fd = fopen(__DIR__ . "/logs/" . $filelog_name, "a");
        fwrite($fd, date("Ymd-G:i:s")
            . " -------------------------------- \n\n" . $message . "\n\n");
        fclose($fd);
    }

}
